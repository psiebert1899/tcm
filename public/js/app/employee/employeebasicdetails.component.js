"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var employee_service_1 = require("./employee.service");
var router_1 = require("@angular/router");
var query_1 = require("../utility/query");
var EmployeeBasicDetailsComponent = (function () {
    function EmployeeBasicDetailsComponent(_employeeService, _router) {
        this._employeeService = _employeeService;
        this._router = _router;
    }
    ;
    EmployeeBasicDetailsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.employee = this._employeeService.selectedEmployee;
        if (this.employee == null || this.employee == undefined) {
            console.log(this._id);
            this._employeeService.getEmployees(new query_1.Query('_id', this._id)).subscribe(function (data) {
                console.log(data);
                _this.employee = data[0];
                _this._employeeService.popEmployee.emit(_this.employee);
                _this.projectCount = _this.employee.projects.length;
                _this.employeeCount = _this.employee.employees.length;
                _this.manager = _this.employee.manager;
                _this.title = _this.employee.title;
            }, function (error) { return console.log(error); });
        }
        else {
            this.projectCount = this.employee.projects.length;
            this.employeeCount = this.employee.employees.length;
            this.manager = this.employee.manager;
            this.title = this.employee.title;
        }
        this._employeeService.popEmployee.subscribe(function (data) {
            _this.employee = data;
            _this.projectCount = data.projects.length;
            _this.employeeCount = data.employees.length;
            _this.manager = data.manager;
            _this.title = data.title;
        });
    };
    EmployeeBasicDetailsComponent.prototype.routerOnActivate = function (curr) {
        console.log("router activated");
        this._id = curr.getParam('id');
    };
    EmployeeBasicDetailsComponent = __decorate([
        core_1.Component({
            selector: 'my-employee-basic-details',
            template: "\n            <article class=\"panel panel-default\">\n                <div class=\"container-fluid\">\n                 <div class=\"col-md-2\">\n                    <div class=\"thumbnail\">\n                        <img src=\"{{employee?.image}}\" class=\"img img-responsive\">      \n                    </div>\n                </div>\n                <div class=\"col-md-4 col-md-offset-1\">\n                    <h1>{{employee?.firstName +\" \" + employee?.lastName}}</h1>\n                    <h4>{{(employee?.division && employee.department)?employee?.division+\"-\"+employee.department:\"\"}}</h4>\n                    <div><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i><span class=\"text-node\">{{employee?.email}}</span></div>\n                    <div><i class=\"fa fa-phone-square\" aria-hidden=\"true\"></i><span class=\"text-node\">{{employee?.phone}}</span></div>\n                    <div><i class=\"fa fa-home\" aria-hidden=\"true\"></i><span class=\"text-node\">{{employee?.city}}{{employee?.state ? \",\" + employee?.state : \"\"}} - {{employee?.country}}</span></div>\n                </div>\n                <div class=\"col-md-4 col-md-offset-1\">\n                    <ul class=\"list-group\" id=\"mylist\">\n                        <li class=\"list-group-item\" id=\"top\">Title: <span class=\"badge\">{{title}}</span></li>\n                        <li class=\"list-group-item\" *ngIf=\"employee?.hasManager\">Manager:<a href=\"#\" class=\"badge\">{{manager}}</a></li>\n                        <li class=\"list-group-item\" *ngIf=\"employee?.canManageEmployees\">Employees: <span class=\"badge\">{{employeeCount}}</span></li>\n                        <li class=\"list-group-item\">Projects: <span class=\"badge\">{{projectCount}}</span></li>\n                        <li class=\"list-group-item\" id=\"bottom\">Avaliability: <span class=\"badge\">0%</span></li>\n                    </ul>\n                </div>\n            </div>\n            </article>\n        ",
            styles: ["\n    \t#mylist{\n            font-size: 1.7em;\n            margin-bottom:0;\n    \t}\n    \t.right-align{\n    \t    float:right;\n    \t}\n    \t.container-fluid{\n    \t    padding:0;\n    \t}\n    \t.col-md-2{\n    \tmargin:0;\n    \tpadding:0;\n    \t}\n    \t.thumbnail{\n    \t    margin-bottom:0;\n    \t}\n    \t.list-group-item{\n    \t    border-right:0;\n    \t}\n    \t#top{\n    \t    border-top:0;\n    \t}\n    \t#bottom{\n    \tborder-bottom:0;\n    \t}\n    \th1{\n    \ttext-align:center;\n    \t}\n    \th4{\n    \ttext-align:center;\n    \t}\n    \t.text-node{\n    \tfloat:right;\n    \twidth:70%;\n    \ttext-align:center;\n    \t}\n    \ti{\n    \tfloat:left;\n    \twidth:25%;\n    \ttext-align:center;\n    \t}\n    "]
        }), 
        __metadata('design:paramtypes', [employee_service_1.EmployeeService, router_1.Router])
    ], EmployeeBasicDetailsComponent);
    return EmployeeBasicDetailsComponent;
}());
exports.EmployeeBasicDetailsComponent = EmployeeBasicDetailsComponent;

//# sourceMappingURL=data:application/json;base64,
