"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var error_service_1 = require("../errors/error.service");
var employee_service_1 = require("./employee.service");
var common_1 = require("@angular/common");
var accordiongroup_component_1 = require("../utility/accordiongroup.component");
var accordion_component_1 = require("../utility/accordion.component");
var employee_1 = require("./employee");
var query_1 = require("../utility/query");
var project_service_1 = require("../project/project.service");
var router_1 = require("@angular/router");
var skill_1 = require("../skills/skill");
var training_1 = require("../training/training");
var NewEmployeeComponent = (function () {
    function NewEmployeeComponent(_fb, _employeeService, _projectService, _router, _errorService) {
        this._fb = _fb;
        this._employeeService = _employeeService;
        this._projectService = _projectService;
        this._router = _router;
        this._errorService = _errorService;
        this.country = '';
        this.canManageEmployees = false;
        this.canManageProjects = false;
        this.hasManager = false;
        this.managers = [];
        this.employees = [];
        this.projects = [];
        this.selectedProjects = [];
        this.projectsManaged = [];
        this.selectedEmployees = [];
        this.skills = [];
        this.trainings = [];
    }
    NewEmployeeComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._employeeService.getEmployees(new query_1.Query('canManageEmployees', true)).subscribe(function (response) { return _this.managers = response; }, function (error) { return console.log(error); });
        this._employeeService.getEmployees(new query_1.Query(null, null)).subscribe(function (response) { return _this.employees = response; }, function (error) { return console.log(error); });
        this._projectService.getProjects().subscribe(function (response) { return _this.projects = response; }, function (error) { return console.log(error); });
        this.myForm = this._fb.group({
            firstName: ['', common_1.Validators.required],
            lastName: ['', common_1.Validators.required],
            email: ['', common_1.Validators.compose([
                    common_1.Validators.required,
                    this.isEmail
                ])],
            phone: ['', common_1.Validators.required],
            country: ['', common_1.Validators.required],
            city: ['', common_1.Validators.required],
            state: [''],
            title: [''],
            division: [''],
            department: [''],
            projects: [''],
            employees: [''],
            manager: [''],
            hasManager: [''],
            canManageEmployees: [''],
            canManageProjects: [''],
            projectManagerFor: ['']
        });
    };
    NewEmployeeComponent.prototype.onCountryChange = function (val) {
        this.country = val;
    };
    NewEmployeeComponent.prototype.onSubmit = function () {
        var _this = this;
        if (this.myForm.value.canManageProjects) {
            var managedProjectElement = document.getElementById('projectsManaged');
            if (projElement !== null) {
                for (var x = 0; x < managedProjectElement.options.length; x++) {
                    var option = managedProjectElement.options[x];
                    if (option.selected) {
                        this.projectsManaged.push(option.value);
                    }
                }
            }
        }
        var projElement = document.getElementById('projects');
        if (projElement !== null) {
            for (var x = 0; x < projElement.options.length; x++) {
                var option = projElement.options[x];
                if (option.selected) {
                    this.selectedProjects.push(option.value);
                }
            }
        }
        console.log(this.projects);
        if (this.myForm.value.canManageEmployees) {
            var empEle = document.getElementById('employees');
            if (empEle !== null) {
                for (var x = 0; x < empEle.length; x++) {
                    var option = empEle.options[x];
                    if (option.selected) {
                        this.selectedEmployees.push(option.value);
                    }
                }
            }
        }
        var employee = new employee_1.Employee(this.myForm.value.email, null, this.myForm.value.firstName, this.myForm.value.lastName, this.myForm.value.phone, this.myForm.value.country, this.myForm.value.city, this.myForm.value.state, this.myForm.value.title, this.myForm.value.division, this.myForm.value.department, this.myForm.value.manager, this.selectedEmployees, this.selectedProjects, this.canManageEmployees, this.canManageProjects, this.hasManager, this.projectsManaged);
        this._employeeService.createUser(employee).subscribe(function (data) { return _this._router.navigateByUrl('/employee/list'); }, function (error) { return console.log(error); });
    };
    NewEmployeeComponent.prototype.handleRadioChange = function (value, forField) {
        if (forField == "canManageEmployees") {
            this.canManageEmployees = value;
        }
        if (forField == "canManageProjects") {
            this.canManageProjects = value;
        }
        if (forField == "hasManager") {
            this.hasManager = value;
        }
    };
    NewEmployeeComponent.prototype.addEmployeeSkill = function () {
        var nameElement = document.getElementById('addSkill');
        var optElem = nameElement.selectedOptions[0];
        var name = optElem.value;
        var levelElement = document.getElementById('skillLevel');
        var skillOpt = levelElement.selectedOptions[0];
        var level = skillOpt.value;
        var skill = new skill_1.Skill(name, level);
        this.skills.push(skill);
        console.log(this.skills);
    };
    NewEmployeeComponent.prototype.isEmail = function (control) {
        if (!control.value.match("[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?")) {
            return { invalidMail: true };
        }
    };
    NewEmployeeComponent.prototype.addTraining = function () {
        /*get the fields*/
        var subjectEle = document.getElementById('subject');
        var orgEle = document.getElementById('training-organization');
        var lengthEle = document.getElementById('training-days');
        var dateEle = document.getElementById('training-date');
        /*get the values*/
        var subject = subjectEle.value;
        console.log("Subject:" + subject);
        var org = orgEle.value;
        var length = lengthEle.value;
        var date = new Date(dateEle.value);
        //create the training object
        var training = new training_1.Training(subject, org, parseInt(length), date);
        //add training to the array
        this.trainings.push(training);
        //clear form values
        subjectEle.value = "";
        orgEle.value = "";
        lengthEle.value = "";
        dateEle.value = "";
    };
    NewEmployeeComponent.prototype.removeTraining = function (ele) {
        console.log(ele);
        for (var x = 0; x < this.trainings.length; x++) {
            if (ele === this.trainings[x]) {
                this.trainings.splice(x, 1);
            }
        }
    };
    NewEmployeeComponent.prototype.removeSkill = function (ele) {
        console.log(ele);
        for (var x = 0; x < this.skills.length; x++) {
            if (ele == this.skills[x]) {
                this.skills.splice(x, 1);
            }
        }
    };
    NewEmployeeComponent = __decorate([
        core_1.Component({
            selector: "my-new-employee",
            template: "\n        <h1>New Employee</h1>\n        <div class=\"col-md-12\">\n        <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n            <accordion>\n                <accordion-group heading=\"Required\" isOpen=\"true\">\n                <div class=\"left-form\">\n                    <div class=\"form-group\">\n                        <label for=\"firstName\">First Name:</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('firstName')\" id=\"firstName\" class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"lastName\">Last Name:</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('lastName')\" id=\"lastName\" class=\"form-control\"/>\n                    </div>\n                    <!--Still need to add image uploading capability-->\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" [ngFormControl]=\"myForm.find('email')\" id=\"email\" class=\"form-control\"/>\n                    </div>\n                </div>\n                <div class=\"right-form\">\n                    <div class=\"form-group\">\n                        <label for=\"phone\">Phone:</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('phone')\" id=\"phone\" class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"country\">Country</label>\n                        <select [ngFormControl]=\"myForm.find('country')\" id=\"country\" #t (change)=\"onCountryChange(t.value)\" class=\"form-control\">\n                            <option>USA</option>\n                            <option>Italy</option>\n                            <option>Brazil</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"city\">City</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('city')\" id=\"city\" class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"country!='' && country=='USA'\">\n                        <label for=\"state\">State:</label>\n                        <select [ngFormControl]=\"myForm.find('state')\" id=\"state\" class=\"form-control\">\n                            <option>Illinois</option>\n                            <option>Michigan</option>\n                            <option>North Carolina</option>\n                            <option>Washington</option>\n                            <option>Florida</option>\n                        </select>\n                    </div>\n                </div>\n                </accordion-group>\n                <accordion-group heading=\"Employee Data (optional)\">\n                    <div class=\"col-one\">\n                        <div class=\"form-group\">\n                            <label for=\"title\">Title:</label>\n                            <select id=\"title\" [ngFormControl]=\"myForm.find('title')\" class=\"form-control\">\n                                <option>Analyst A1</option>\n                                <option>Analyst A2</option>\n                                <option>Consultant C1</option>\n                                <option>Manager</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Has Direct Supervisor?</label>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"hasManager\" value=\"true\" [ngFormControl]=\"myForm.find('hasManager')\" (click)=\"handleRadioChange(true,'hasManager')\"/>Yes</label>\n                            </div>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"hasManager\" value=\"false\" checked [ngFormControl]=\"myForm.find('hasManager')\" (click)=\"handleRadioChange(false,'hasManager')\"/>No</label>\n                            </div>\n                        </div>\n                        <div class=\"form-group\" *ngIf=\"hasManager\">\n                            <label for=\"Manager\">Manager</label>\n                            <select id=\"manager\" [ngFormControl]=\"myForm.find('manager')\" class=\"form-control\" size=\"4\">\n                                <option *ngFor=\"let m of managers\">{{m.firstName + \" \" + m.lastName}}</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"col-two\">\n                        <div class=\"form-group\">\n                            <label for=\"division\">Division</label>\n                            <select id=\"division\" [ngFormControl]=\"myForm.find('division')\" class=\"form-control\">\n                                <option>Hyla Soft USA</option>\n                                <option>Hyla Soft Italy</option>\n                                <option>Hyla soft Brazil</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                        <label>Manages Others?</label>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"canManageEmployees\" value=\"true\" [ngFormControl]=\"myForm.find('canManageEmployees')\"(click)=\"handleRadioChange(true,'canManageEmployees')\"/>Yes</label>\n                            </div>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"canManageEmployees\" value=\"false\" [ngFormControl]=\"myForm.find('canManageEmployees')\"  (click)=\"handleRadioChange(false,'canManageEmployees')\" checked/>No</label>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-three\">\n                        <div class=\"form-group\">\n                            <label for=\"department\">Department</label>\n                            <select id=\"department\" [ngFormControl]=\"myForm.find('department')\" class=\"form-control\">\n                                <option>Software</option>\n                                <option>PLM</option>\n                                <option>MES</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Manages Projects?</label>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"canManageProjects\" [ngFormControl]=\"myForm.find('canManageProjects')\" (click)=\"handleRadioChange(true,'canManageProjects')\" value=\"true\"/>Yes</label>\n                            </div>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"canManageProjects\" value=\"false\" [ngFormControl]=\"myForm.find('canManageProjects')\"(click)=\"handleRadioChange(false,'canManageProjects')\" checked/>No</label>\n                            </div>\n                        </div>\n                    </div>\n                </accordion-group>\n                <accordion-group heading=\"Projects Managed\" *ngIf=\"canManageProjects\">\n                        <div class=\"form-group\">\n                            <label for=\"projects\">Project Manager For:</label>\n                            <select id=\"projectsManaged\" [ngFormControl]=\"myForm.find('projectManagerFor')\" multiple class=\"form-control\">\n                                <option *ngFor=\"let p of projects\" [value]=\"p._id\">{{p.name}}</option>\n                            </select>\n                        </div>\n                </accordion-group>\n                <accordion-group heading=\"Employees\" *ngIf=\"canManageEmployees\">\n                    <div class=\"form-group\" *ngIf=\"canManageEmployees\">\n                            <label for=\"employees\">Employees</label>\n                            <select id=\"employees\" [ngFormControl]=\"myForm.find('employees')\" multiple class=\"form-control\">\n                                <option *ngFor=\"let e of employees\" [value]=\"e._id\">{{e.firstName + \" \" + e.lastName}}</option>\n                            </select>\n                        </div>\n                </accordion-group>\n                <accordion-group heading=\"Projects\">\n                        <div class=\"form-group\">\n                            <label for=\"projects\">Projects:</label>\n                            <select id=\"projects\" [ngFormControl]=\"myForm.find('projects')\" multiple class=\"form-control\">\n                                <option *ngFor=\"let p of projects\" [value]=\"p._id\">{{p.name}}</option>\n                            </select>\n                        </div>\n                </accordion-group>\n                <accordion-group heading=\"Resume (optional)\">\n                    <div class=\"left-form\">\n                        <label for=\"resume\">Upload Resume</label>\n                        <div class=\"well \">\n                        <label for=\"path\">File Name:</label>\n                            <input type=\"text\" value=\"resume path\"  class=\"form-control\" disabled/>\n                            <label class=\"btn btn-default btn-file\">\n                                Browse <input type=\"file\" style=\"display: none;\">\n                            </label> \n                        </div>\n                    </div>\n                    <div class=\"right-form\">\n                    <label for=\"newSkill\">New Skill</label>\n                        <div class=\"well\">\n                        <label for=\"newSkill\">Skill Name</label>\n                            <input type=\"text\" id=\"newSkill\" name=\"newSkill\" class=\"form-control\"/>\n                            <button type=\"button\" class=\"btn btn-default add-btn\">Add</button>\n                        </div>\n                    </div>\n                    <div class=\"uneven-col-one\">\n                        <div class=\"form-group\">\n                            <label for=\"addSkill\">Skill Name:</label>\n                            <select name=\"addSkill\" id=\"addSkill\" class=\"form-control\">\n                                <option value=\"C#\">C#</option>\n                                <option value=\"TeamCenter\">TeamCenter</option>\n                                <option value=\"SimaticIT\">Simatic IT</option>\n                            </select>\n                            <label for=\"skillLevel\" id=\"skillLevelLabel\">Skill Level</label>\n                            <select name=\"skillLevel\" id=\"skillLevel\" class=\"form-control\">\n                                <option value=\"Beginner\">Beginner</option>\n                                <option value=\"Intermediate\">Intermediate</option>\n                                <option value=\"Advanced\">Advanced</option>\n                            </select>\n                        </div>\n                    </div>\n                    <div class=\"uneven-col-two\">\n                        <button type=\"button\" class=\"btn btn default center-block\" id=\"addButton\"(click)=\"addEmployeeSkill()\">&gt;&gt;&gt;</button>\n                    </div>\n                    <div class=\"uneven-col-three\">\n                        <div class=\"form-group\">\n                            <label for=\"addedSkills\">Employee Skills:</label>\n                            <div class=\"table-wrapper\">\n                                <table class=\"table-striped\" id=\"skills-table\">\n                                    <tr>\n                                        <th>Skill Name</th>\n                                        <th>Skill Level</th>\n                                        <th>Remove</th>\n                                    </tr>\n                                    <tr *ngFor=\"let s of skills\">\n                                        <td>{{s.name}}</td>\n                                        <td>{{s.level}}</td>\n                                        <td><button type=\"button\" (click)=\"removeSkill(s)\">X</button></td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                        <!--Make a single input allowing the user to select a skill-->\n                        <!--Make a corresponding level input, allowing the user to select the level of the skill-->\n                        <!--Make an add button, allowing the user to add the skill to the list-->\n                        <!--display the list of currently added skills, with a button that allows the editing or deleting of a particular skill-->\n                </accordion-group>\n                <accordion-group heading=\"Training (optional)\">\n                    <!--Allow for uploading of training docs-->\n                    <!--Make an input for date of training-->\n                    <!--Make an input for length of training-->\n                    <!--Make an input for name of training-->\n                    <div class=\"left-form\">\n                        <div class=\"left-form\">\n                            <div class=\"form-group\">\n                                <label for=\"subject\">Subject:</label>\n                                <input type=\"text\" id=\"subject\" name=\"subject\" class=\"form-control\"/>\n                            </div>\n                            <div class=\"form-group\">\n                                <label for=\"training-organization\">Organization:</label>\n                                <input type=\"text\" id=\"training-organization\" name=\"training-organization\" class=\"form-control\"/>\n                        </div>\n                    </div>\n                    <div class=\"right-form\">\n                        <div class=\"form-group\">\n                            <label for=\"training-days\">Length:</label>\n                            <input type=\"number\" id=\"training-days\" name=\"training-days\" class=\"form-control\"/>\n                        </div>\n                        <div class=\"form-group\">\n                            <label for=\"training-date\">Date:</label>\n                            <input type=\"date\" id=\"training-date\" name=\"training-date\" class=\"form-control\" />\n                        </div>\n                    </div>\n                        <button type=\"button\" class=\"btn btn-default btn-lg center-block\" (click)=\"addTraining()\">Add</button>\n                    </div>\n                    <div class=\"right-form\">\n                         <div class=\"form-group\">\n                            <label for=\"addedTraining\">Trainings:</label>\n                            <div class=\"table-wrapper\">\n                            <table id=\"training-table\" class=\"table-striped\">\n                            <tr>\n                                <th>Subject</th>\n                                <th>Organization</th>\n                                <th>Length</th>\n                                <th>Date</th>\n                                <th>Delete</th>\n                            </tr>\n                                <tr *ngFor=\"let t of trainings\">\n                                    <td>{{t.subject}}</td>\n                                    <td>{{t.organization}}</td>\n                                    <td>{{t.length}}</td>\n                                    <td>{{t.date.getYear()}}</td>\n                                    <td><button type=\"button\" (click)=\"removeTraining(t)\">X</button></td>\n                                </tr>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </accordion-group>                \n            </accordion>\n            <button type=\"submit\" class=\"btn btn-primary btn-lg center-block submit-button\">Submit</button>\n        </form>\n        </div>\n    ",
            providers: [employee_service_1.EmployeeService],
            directives: [accordion_component_1.AccordionComponent, accordiongroup_component_1.AccordionComponentGroup],
            styles: ["\n        .left-form{\n            float:left;\n            width:49%;\n            margin-bottom:25px;\n        }\n        .right-form{\n            float:right;\n            width:49%;\n            margin-bottom:25px;\n        }\n        .col-one{\n            float:left;\n            width:33%;\n        }\n        .col-two{\n            float:left;\n            width:30%;\n            margin-right:2%;\n            margin-left:2%;\n        }\n        .col-three{\n            float:left;\n            width:33%;\n        }\n        h1{\n            color:white;\n            font-family:OpenSans;\n        }\n        .submit-button{\n            width:100%;\n            border-radius:0;\n            border-bottom-left-radius: 5px;\n            border-bottom-right-radius: 5px;\n        }\n        .col-md-12{\n            background-color:white;\n            border-radius:5px;\n            padding:0;\n\n        }\n        .my-well{\n            height:8.5em;\n            overflow: scroll;\n            background-color:white;\n            padding:0;\n        }\n        .btn{\n        margin-top:2em;\n        }\n        .btn-file{\n            width:40%;\n            margin-left:30%;\n        }\n        .add-btn{\n            width:40%;\n            margin-left:30%;\n        }\n        .uneven-col-one{\n            width:40%;\n            float:left;\n        }\n        .uneven-col-two{\n            width:10%;\n            float:left;\n        }\n        .uneven-col-three{\n            width:50%;\n            float:left;\n        }\n        #skillLevelLabel{\n            margin-top:2em;\n        }\n        #addButton{\n            margin-top:4.25em\n        }\n        #training-table{\n            width:100%;\n            padding:0;\n        }\n        #training-table > th{\n            text-align:center;\n        }\n        th{\n            text-align:center;\n        }\n        #skills-table{\n            width:100%;\n        }\n        td{\n            text-align:center;\n        }\n        .table-wrapper{\n            height:10em;\n            overflow:auto;\n                        border:1px solid black;\n            border-radius:5px;\n        }\n    "]
        }), 
        __metadata('design:paramtypes', [common_1.FormBuilder, employee_service_1.EmployeeService, project_service_1.ProjectService, router_1.Router, error_service_1.ErrorService])
    ], NewEmployeeComponent);
    return NewEmployeeComponent;
}());
exports.NewEmployeeComponent = NewEmployeeComponent;

//# sourceMappingURL=data:application/json;base64,
