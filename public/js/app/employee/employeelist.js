"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var employee_service_1 = require("./employee.service");
var error_service_1 = require("../errors/error.service");
var employeedisplay_component_1 = require("./employeedisplay.component");
var employeedetails_component_1 = require("./employeedetails.component");
var employeebasicdetails_component_1 = require("./employeebasicdetails.component");
var router_1 = require("@angular/router");
var query_1 = require("../utility/query");
var employee_search_pipe_1 = require("./employee-search.pipe");
var EmployeeListComponent = (function () {
    function EmployeeListComponent(_employeeService, _errorService) {
        this._employeeService = _employeeService;
        this._errorService = _errorService;
        this.employeeFilters = ["firstName", "lastName", "email"];
        this.select = new core_1.EventEmitter();
        this.dataLoaded = false;
    }
    EmployeeListComponent.prototype.ngOnInit = function () {
        var _this = this;
        this._employeeService.getEmployees(new query_1.Query(null, null)).subscribe(function (employees) {
            _this.employees = employees;
            _this._employeeService.employees = employees;
            _this.dataLoaded = true;
        }, function (error) { return console.log(error); });
        (function (error) { return _this._errorService.handleError(error); });
    };
    EmployeeListComponent.prototype.setSelectedEmployee = function (emp) {
        this._employeeService.selectEmployee(emp);
        this._employeeService.popEmployeeDetails(emp);
    };
    EmployeeListComponent = __decorate([
        core_1.Component({
            selector: "my-employee-list",
            template: "\n        <div>\n          <h1>Employee List</h1>\n        </div>\n        <div class=\"input\">\n            <label for=\"search\" style=\"font-family:OpenSans\">Seach Employee By:</label>\n            <select #sel class=\"properties\" [(ngModel)]=\"property\" (ngModelChange)=\"select.emit(sel.value)\">\n              <option style=\"font-family:OpenSans\" selected>Please Select</option>\n              <option style=\"font-family:OpenSans\" *ngFor=\" let filter of employeeFilters\" >{{filter}}</option>\n            </select>\n            <input type=\"text\" [(ngModel)]=\"employeeSearch\"/>\n        </div>\n        <section class=\"col-md-12\" *ngIf=\"dataLoaded\">\n            <div class=\"container-fluid\">\n                <my-employee-display *ngFor=\"let e of employees | findEmployee: employeeSearch: property\" [employee]=\"e\" (click)=\"setSelectedEmployee(e)\"></my-employee-display>\n            </div>\n        </section>\n        <my-employee-details></my-employee-details>\n    ",
            directives: [employeedisplay_component_1.EmployeeDisplayComponent, employeedetails_component_1.EmployeeDetailsComponent, employeebasicdetails_component_1.EmployeeBasicDetailsComponent],
            pipes: [employee_search_pipe_1.EmployeeSearchPipe],
            styles: ["\n        h1{\n            font-family:OpenSans;\n            color:white;\n        }\n        .col-md-12{\n            background-color:white;\n            border-radius:5px;\n            padding-top:25px;\n        }\n        div.input{\n          padding: 10px 10px;\n        }\n\n        input[type=text] {\n            width: 130px;\n            box-sizing: border-box;\n            border: 2px solid #009933;\n            border-radius: 4px;\n            font-size: 16px;\n            background-color: white;\n            background-position: 10px 10px;\n            background-repeat: no-repeat;\n            padding: 12px 20px 12px 40px;\n            -webkit-transition: width 0.4s ease-in-out;\n            transition: width 0.4s ease-in-out;\n          }\n\n          input[type=text]:focus {\n            width: 50%;\n          }\n          select.properties {\n            position: relative;\n            font-family:OpenSans;\n            font-size: 16px;\n            margin: 0 auto;\n            padding: 10px 10px 10px 30px;\n            background: #fff;\n            border: 1px solid silver;\n            cursor: pointer;\n            outline: none;\n          }\n    "]
        }),
        router_1.Routes([
            { path: "/basic", component: employeebasicdetails_component_1.EmployeeBasicDetailsComponent }
        ]), 
        __metadata('design:paramtypes', [employee_service_1.EmployeeService, error_service_1.ErrorService])
    ], EmployeeListComponent);
    return EmployeeListComponent;
}());
exports.EmployeeListComponent = EmployeeListComponent;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVtcGxveWVlL2VtcGxveWVlbGlzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEscUJBQXNELGVBQWUsQ0FBQyxDQUFBO0FBQ3RFLGlDQUE4QixvQkFBb0IsQ0FBQyxDQUFBO0FBQ25ELDhCQUEyQix5QkFBeUIsQ0FBQyxDQUFBO0FBRXJELDBDQUF1Qyw2QkFBNkIsQ0FBQyxDQUFBO0FBQ3JFLDBDQUF1Qyw2QkFBNkIsQ0FBQyxDQUFBO0FBQ3JFLCtDQUE0QyxrQ0FBa0MsQ0FBQyxDQUFBO0FBQy9FLHVCQUFxQixpQkFBaUIsQ0FBQyxDQUFBO0FBQ3ZDLHNCQUFvQixrQkFBa0IsQ0FBQyxDQUFBO0FBQ3ZDLHFDQUFpQyx3QkFBd0IsQ0FBQyxDQUFBO0FBdUUxRDtJQUNJLCtCQUFvQixnQkFBaUMsRUFBVSxhQUEyQjtRQUF0RSxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWlCO1FBQVUsa0JBQWEsR0FBYixhQUFhLENBQWM7UUFDMUYsb0JBQWUsR0FBRyxDQUFDLFdBQVcsRUFBRSxVQUFVLEVBQUUsT0FBTyxDQUFDLENBQUM7UUFFckQsV0FBTSxHQUFHLElBQUksbUJBQVksRUFBRSxDQUFDO1FBQzVCLGVBQVUsR0FBRyxLQUFLLENBQUM7SUFKMEUsQ0FBQztJQUs5Rix3Q0FBUSxHQUFSO1FBQUEsaUJBV0M7UUFURyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLElBQUksYUFBSyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FDL0QsVUFBQSxTQUFTO1lBQ0wsS0FBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7WUFDM0IsS0FBSSxDQUFDLGdCQUFnQixDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7WUFDNUMsS0FBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDM0IsQ0FBQyxFQUNELFVBQUEsS0FBSyxJQUFJLE9BQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBbEIsQ0FBa0IsQ0FDOUIsQ0FBQztRQUNFLENBQUEsVUFBQSxLQUFLLElBQUksT0FBQSxLQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsRUFBckMsQ0FBcUMsRUFBQztJQUN2RCxDQUFDO0lBQ0QsbURBQW1CLEdBQW5CLFVBQW9CLEdBQWE7UUFDekIsSUFBSSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMxQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQTNGTDtRQUFDLGdCQUFTLENBQUM7WUFDUCxRQUFRLEVBQUcsa0JBQWtCO1lBQzdCLFFBQVEsRUFBRSw0K0JBa0JUO1lBQ0QsVUFBVSxFQUFHLENBQUMsb0RBQXdCLEVBQUUsb0RBQXdCLEVBQUUsOERBQTZCLENBQUM7WUFDaEcsS0FBSyxFQUFFLENBQUMseUNBQWtCLENBQUM7WUFDM0IsTUFBTSxFQUFFLENBQUMsc3FDQTBDUixDQUFDO1NBQ0wsQ0FBQztRQUNELGVBQU0sQ0FBQztZQUNKLEVBQUMsSUFBSSxFQUFFLFFBQVEsRUFBRyxTQUFTLEVBQUcsOERBQTZCLEVBQUM7U0FDL0QsQ0FBQzs7NkJBQUE7SUF1QkYsNEJBQUM7QUFBRCxDQXRCQSxBQXNCQyxJQUFBO0FBdEJZLDZCQUFxQix3QkFzQmpDLENBQUEiLCJmaWxlIjoiZW1wbG95ZWUvZW1wbG95ZWVsaXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb25lbnQsIE9uSW5pdCwgT3V0cHV0LCBFdmVudEVtaXR0ZXJ9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7RW1wbG95ZWVTZXJ2aWNlfSBmcm9tIFwiLi9lbXBsb3llZS5zZXJ2aWNlXCI7XHJcbmltcG9ydCB7RXJyb3JTZXJ2aWNlfSBmcm9tIFwiLi4vZXJyb3JzL2Vycm9yLnNlcnZpY2VcIjtcclxuaW1wb3J0IHtFbXBsb3llZX0gZnJvbSBcIi4vZW1wbG95ZWVcIjtcclxuaW1wb3J0IHtFbXBsb3llZURpc3BsYXlDb21wb25lbnR9IGZyb20gXCIuL2VtcGxveWVlZGlzcGxheS5jb21wb25lbnRcIjtcclxuaW1wb3J0IHtFbXBsb3llZURldGFpbHNDb21wb25lbnR9IGZyb20gXCIuL2VtcGxveWVlZGV0YWlscy5jb21wb25lbnRcIjtcclxuaW1wb3J0IHtFbXBsb3llZUJhc2ljRGV0YWlsc0NvbXBvbmVudH0gZnJvbSBcIi4vZW1wbG95ZWViYXNpY2RldGFpbHMuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7Um91dGVzfSBmcm9tIFwiQGFuZ3VsYXIvcm91dGVyXCI7XHJcbmltcG9ydCB7UXVlcnl9IGZyb20gXCIuLi91dGlsaXR5L3F1ZXJ5XCI7XHJcbmltcG9ydCB7RW1wbG95ZWVTZWFyY2hQaXBlfSBmcm9tIFwiLi9lbXBsb3llZS1zZWFyY2gucGlwZVwiO1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yIDogXCJteS1lbXBsb3llZS1saXN0XCIsXHJcbiAgICB0ZW1wbGF0ZTogYFxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8aDE+RW1wbG95ZWUgTGlzdDwvaDE+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cImlucHV0XCI+XHJcbiAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJzZWFyY2hcIiBzdHlsZT1cImZvbnQtZmFtaWx5Ok9wZW5TYW5zXCI+U2VhY2ggRW1wbG95ZWUgQnk6PC9sYWJlbD5cclxuICAgICAgICAgICAgPHNlbGVjdCAjc2VsIGNsYXNzPVwicHJvcGVydGllc1wiIFsobmdNb2RlbCldPVwicHJvcGVydHlcIiAobmdNb2RlbENoYW5nZSk9XCJzZWxlY3QuZW1pdChzZWwudmFsdWUpXCI+XHJcbiAgICAgICAgICAgICAgPG9wdGlvbiBzdHlsZT1cImZvbnQtZmFtaWx5Ok9wZW5TYW5zXCIgc2VsZWN0ZWQ+UGxlYXNlIFNlbGVjdDwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgIDxvcHRpb24gc3R5bGU9XCJmb250LWZhbWlseTpPcGVuU2Fuc1wiICpuZ0Zvcj1cIiBsZXQgZmlsdGVyIG9mIGVtcGxveWVlRmlsdGVyc1wiID57e2ZpbHRlcn19PC9vcHRpb24+XHJcbiAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBbKG5nTW9kZWwpXT1cImVtcGxveWVlU2VhcmNoXCIvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzPVwiY29sLW1kLTEyXCIgKm5nSWY9XCJkYXRhTG9hZGVkXCI+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItZmx1aWRcIj5cclxuICAgICAgICAgICAgICAgIDxteS1lbXBsb3llZS1kaXNwbGF5ICpuZ0Zvcj1cImxldCBlIG9mIGVtcGxveWVlcyB8IGZpbmRFbXBsb3llZTogZW1wbG95ZWVTZWFyY2g6IHByb3BlcnR5XCIgW2VtcGxveWVlXT1cImVcIiAoY2xpY2spPVwic2V0U2VsZWN0ZWRFbXBsb3llZShlKVwiPjwvbXktZW1wbG95ZWUtZGlzcGxheT5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9zZWN0aW9uPlxyXG4gICAgICAgIDxteS1lbXBsb3llZS1kZXRhaWxzPjwvbXktZW1wbG95ZWUtZGV0YWlscz5cclxuICAgIGAsXHJcbiAgICBkaXJlY3RpdmVzIDogW0VtcGxveWVlRGlzcGxheUNvbXBvbmVudCwgRW1wbG95ZWVEZXRhaWxzQ29tcG9uZW50LCBFbXBsb3llZUJhc2ljRGV0YWlsc0NvbXBvbmVudF0sXHJcbiAgICBwaXBlczogW0VtcGxveWVlU2VhcmNoUGlwZV0sXHJcbiAgICBzdHlsZXM6IFtgXHJcbiAgICAgICAgaDF7XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5Ok9wZW5TYW5zO1xyXG4gICAgICAgICAgICBjb2xvcjp3aGl0ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmNvbC1tZC0xMntcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjp3aGl0ZTtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czo1cHg7XHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOjI1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGRpdi5pbnB1dHtcclxuICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlucHV0W3R5cGU9dGV4dF0ge1xyXG4gICAgICAgICAgICB3aWR0aDogMTMwcHg7XHJcbiAgICAgICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHNvbGlkICMwMDk5MzM7XHJcbiAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTBweCAxMHB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gICAgICAgICAgICBwYWRkaW5nOiAxMnB4IDIwcHggMTJweCA0MHB4O1xyXG4gICAgICAgICAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDAuNHMgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IHdpZHRoIDAuNHMgZWFzZS1pbi1vdXQ7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgaW5wdXRbdHlwZT10ZXh0XTpmb2N1cyB7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBzZWxlY3QucHJvcGVydGllcyB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6T3BlblNhbnM7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTBweCAxMHB4IDMwcHg7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIHNpbHZlcjtcclxuICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgICBvdXRsaW5lOiBub25lO1xyXG4gICAgICAgICAgfVxyXG4gICAgYF1cclxufSlcclxuQFJvdXRlcyhbXHJcbiAgICB7cGF0aDogXCIvYmFzaWNcIiAsIGNvbXBvbmVudCA6IEVtcGxveWVlQmFzaWNEZXRhaWxzQ29tcG9uZW50fVxyXG5dKVxyXG5leHBvcnQgY2xhc3MgRW1wbG95ZWVMaXN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VtcGxveWVlU2VydmljZTogRW1wbG95ZWVTZXJ2aWNlLCBwcml2YXRlIF9lcnJvclNlcnZpY2U6IEVycm9yU2VydmljZSkge31cclxuICAgIGVtcGxveWVlRmlsdGVycyA9IFtcImZpcnN0TmFtZVwiLCBcImxhc3ROYW1lXCIsIFwiZW1haWxcIl07XHJcbiAgICBlbXBsb3llZXM6IEVtcGxveWVlW107XHJcbiAgICBzZWxlY3QgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBkYXRhTG9hZGVkID0gZmFsc2U7XHJcbiAgICBuZ09uSW5pdCgpIHtcclxuXHJcbiAgICAgICAgdGhpcy5fZW1wbG95ZWVTZXJ2aWNlLmdldEVtcGxveWVlcyhuZXcgUXVlcnkobnVsbCwgbnVsbCkpLnN1YnNjcmliZShcclxuICAgICAgICAgICAgZW1wbG95ZWVzID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZW1wbG95ZWVzID0gZW1wbG95ZWVzO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZW1wbG95ZWVTZXJ2aWNlLmVtcGxveWVlcyA9IGVtcGxveWVlcztcclxuICAgICAgICAgICAgICAgIHRoaXMuZGF0YUxvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGVycm9yID0+IGNvbnNvbGUubG9nKGVycm9yKVxyXG4gICAgICAgICk7XHJcbiAgICAgICAgICAgIGVycm9yID0+IHRoaXMuX2Vycm9yU2VydmljZS5oYW5kbGVFcnJvcihlcnJvcik7XHJcbiAgICB9XHJcbiAgICBzZXRTZWxlY3RlZEVtcGxveWVlKGVtcDogRW1wbG95ZWUpIHtcclxuICAgICAgICAgICAgdGhpcy5fZW1wbG95ZWVTZXJ2aWNlLnNlbGVjdEVtcGxveWVlKGVtcCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VtcGxveWVlU2VydmljZS5wb3BFbXBsb3llZURldGFpbHMoZW1wKTtcclxuICAgIH1cclxufVxyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
