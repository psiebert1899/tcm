"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var accordiongroup_component_1 = require("../utility/accordiongroup.component");
var accordion_component_1 = require("../utility/accordion.component");
var EditEmployeeComponent = (function () {
    function EditEmployeeComponent(_fb) {
        this._fb = _fb;
        this.country = '';
    }
    EditEmployeeComponent.prototype.ngOnInit = function () {
        this.myForm = this._fb.group({
            firstName: ['', common_1.Validators.required],
            lastName: ['', common_1.Validators.required],
            email: ['', common_1.Validators.compose([
                    common_1.Validators.required,
                    this.isEmail
                ])],
            phone: ['', common_1.Validators.required],
            country: ['', common_1.Validators.required],
            city: ['', common_1.Validators.required],
            state: [''],
            title: [''],
            division: [''],
            department: [''],
            manager: ['']
        });
    };
    EditEmployeeComponent.prototype.isEmail = function (control) {
        if (!control.value.match("[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?")) {
            return { invalidMail: true };
        }
    };
    EditEmployeeComponent.prototype.onCountryChange = function (val) {
        this.country = val;
        console.log(val);
    };
    EditEmployeeComponent = __decorate([
        core_1.Component({
            selector: 'edit-employee-component',
            template: "\n        <form [ngFormModel]=\"myForm\" (ngSubmit)=\"OnSubmit()\">\n            <accordion>\n                <accordion-group heading=\"Basic Details\">\n                <div class=\"left-form\">\n                 <div class=\"form-group\">\n                    <label for=\"firstName\">First Name:</label>\n                    <input type=\"text\" [ngFormControl]=\"myForm.find('firstName')\" id=\"firstName\" class=\"form-control\"/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"lastName\">Last Name:</label>\n                    <input type=\"text\" [ngFormControl]=\"myForm.find('lastName')\" id=\"lastName\" class=\"form-control\"/>\n                </div>\n                <!--Still need to add image uploading capability-->\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"email\" [ngFormControl]=\"myForm.find('email')\" id=\"email\" class=\"form-control\"/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"phone\">Phone:</label>\n                    <input type=\"text\" [ngFormControl]=\"myForm.find('phone')\" id=\"phone\" class=\"form-control\"/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"country\">Country</label>\n                    <select [ngFormControl]=\"myForm.find('country')\" id=\"country\" #t (change)=\"onCountryChange(t.value)\" class=\"form-control\">\n                        <option>USA</option>\n                        <option>Italy</option>\n                        <option>Brazil</option>\n                    </select>\n                </div>\n                </div>\n                <div class=\"right-form\">\n                <div class=\"form-group\">\n                    <label for=\"city\">City</label>\n                    <input type=\"text\" [ngFormControl]=\"myForm.find('city')\" id=\"city\" class=\"form-control\"/>\n                </div>\n                <div class=\"form-group\" *ngIf=\"country!='' && country=='USA'\">\n                    <label for=\"state\">State:</label>\n                    <select [ngFormControl]=\"myForm.find('state')\" id=\"state\" class=\"form-control\">\n                        <option>Illinois</option>\n                        <option>Michigan</option>\n                        <option>North Carolina</option>\n                        <option>Washington</option>\n                        <option>Florida</option>\n                    </select>\n                </div>\n                 <div class=\"form-group\">\n                        <label for=\"title\">Title:</label>\n                        <select id=\"title\" [ngFormControl]=\"myForm.find('title')\" class=\"form-control\">\n                            <option>Analyst A1</option>\n                            <option>Analyst A2</option>\n                            <option>Consultant C1</option>\n                            <option>Manager</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"division\">Division</label>\n                        <select id=\"division\" [ngFormControl]=\"myForm.find('division')\" class=\"form-control\">\n                            <option>Hyla Soft USA</option>\n                            <option>Hyla Soft Italy</option>\n                            <option>Hyla soft Brazil</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"department\">Department</label>\n                        <select id=\"department\" [ngFormControl]=\"myForm.find('department')\" class=\"form-control\">\n                            <option>Software</option>\n                            <option>PLM</option>\n                            <option>MES</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"Manager\">Manager</label>\n                        <select id=\"manager\" [ngFormControl]=\"myForm.find('manager')\" class=\"form-control\">\n                            <option>Unassigned</option>\n                            <option>David Kaparis</option>\n                            <option>Ettore Soldi</option>\n                            <option>Jason McDonald</option>\n                        </select>\n                    </div>    \n                  </div>\n                </accordion-group>\n                <accordion-group heading=\"Add/Remove Employees\">\n                    <div class=\"left-form\">\n                    \n                    </div>\n                    <div class=\"right-form\">\n                    \n                    </div>\n                    \n                </accordion-group>\n                <accordion-group heading=\"Add/Remove Projects\">\n                \n                </accordion-group>\n                <accordion-group heading=\"Add/Remove Skills/Edit Resume\">\n                \n                </accordion-group>\n                <accordion-group heading=\"Add/Remove Training\">\n                \n                </accordion-group>\n                <accordion-group heading=\"Edit Benefits\">\n                \n                </accordion-group>\n                <accordion-group heading=\"Add/Remove Notes\">\n                \n                </accordion-group>\n                \n            </accordion>\n        \n        </form>\n    ",
            directives: [accordion_component_1.AccordionComponent, accordiongroup_component_1.AccordionComponentGroup],
            styles: [
                "\n            .left-form{\n                width:45%;\n                float:left;\n            }\n            .right-form{\n                width:45%;\n                width:45%;\n                float:right;\n            }\n        "
            ]
        }), 
        __metadata('design:paramtypes', [common_1.FormBuilder])
    ], EditEmployeeComponent);
    return EditEmployeeComponent;
}());
exports.EditEmployeeComponent = EditEmployeeComponent;

//# sourceMappingURL=data:application/json;base64,
