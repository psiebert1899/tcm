"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var employee_service_1 = require("./employee.service");
var router_1 = require("@angular/router");
var error_service_1 = require("../errors/error.service");
var employee_1 = require("./employee");
var NewEmployeeBasic = (function () {
    function NewEmployeeBasic(_fb, _employeeService, _router, _errorService) {
        this._fb = _fb;
        this._employeeService = _employeeService;
        this._router = _router;
        this._errorService = _errorService;
        this.country = '';
        this.canManageEmployees = false;
        this.canManageProjects = false;
        this.hasManager = false;
    }
    NewEmployeeBasic.prototype.ngOnInit = function () {
        this.myForm = this._fb.group({
            firstName: ['', common_1.Validators.required],
            lastName: ['', common_1.Validators.required],
            email: ['', common_1.Validators.compose([
                    common_1.Validators.required,
                    this.isEmail
                ])],
            phone: ['', common_1.Validators.required],
            country: ['', common_1.Validators.required],
            city: ['', common_1.Validators.required],
            state: [''],
            title: [''],
            division: [''],
            department: ['']
        });
    };
    NewEmployeeBasic.prototype.isEmail = function (control) {
        if (!control.value.match("[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?")) {
            return { invalidMail: true };
        }
    };
    NewEmployeeBasic.prototype.handleRadioChange = function (value, forField) {
        if (forField == "canManageEmployees") {
            this.canManageEmployees = value;
        }
        if (forField == "canManageProjects") {
            this.canManageProjects = value;
        }
        if (forField == "hasManager") {
            this.hasManager = value;
        }
    };
    NewEmployeeBasic.prototype.onSubmit = function () {
        var _this = this;
        var employee = new employee_1.Employee(this.myForm.value.email, null, this.myForm.value.firstName, this.myForm.value.lastName, this.myForm.value.phone, this.myForm.value.country, this.myForm.value.city, this.myForm.value.state, this.myForm.value.title, this.myForm.value.division, this.myForm.value.department, this.canManageEmployees, this.canManageProjects, this.hasManager);
        this._employeeService.createUser(employee).subscribe(function (data) { return _this._router.navigateByUrl('/employee/list'); }, function (error) { return console.log(error); });
    };
    NewEmployeeBasic.prototype.onCountryChange = function (val) {
        this.country = val;
    };
    NewEmployeeBasic = __decorate([
        core_1.Component({
            selector: 'my-basic-employee-form',
            template: "\n        <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n        <div class=\"col-md-12 form-container\">\n                <div class=\"left-form\">\n                    <div class=\"form-group\">\n                        <label for=\"firstName\">First Name:</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('firstName')\" id=\"firstName\" class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"lastName\">Last Name:</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('lastName')\" id=\"lastName\" class=\"form-control\"/>\n                    </div>\n                    <!--Still need to add image uploading capability-->\n                    <div class=\"form-group\">\n                        <label for=\"email\">Email</label>\n                        <input type=\"email\" [ngFormControl]=\"myForm.find('email')\" id=\"email\" class=\"form-control\"/>\n                    </div>\n                </div>\n                <div class=\"right-form\">\n                    <div class=\"form-group\">\n                        <label for=\"phone\">Phone:</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('phone')\" id=\"phone\" class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"country\">Country</label>\n                        <select [ngFormControl]=\"myForm.find('country')\" id=\"country\" #t (change)=\"onCountryChange(t.value)\" class=\"form-control\">\n                            <option>USA</option>\n                            <option>Italy</option>\n                            <option>Brazil</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"city\">City</label>\n                        <input type=\"text\" [ngFormControl]=\"myForm.find('city')\" id=\"city\" class=\"form-control\"/>\n                    </div>\n                    <div class=\"form-group\" *ngIf=\"country!='' && country=='USA'\">\n                        <label for=\"state\">State:</label>\n                        <select [ngFormControl]=\"myForm.find('state')\" id=\"state\" class=\"form-control\">\n                            <option>Illinois</option>\n                            <option>Michigan</option>\n                            <option>North Carolina</option>\n                            <option>Washington</option>\n                            <option>Florida</option>\n                        </select>\n                    </div>\n                </div>\n                <div class=\"col-one\">\n                        <div class=\"form-group\">\n                            <label for=\"title\">Title:</label>\n                            <select id=\"title\" [ngFormControl]=\"myForm.find('title')\" class=\"form-control\">\n                                <option>Analyst A1</option>\n                                <option>Analyst A2</option>\n                                <option>Consultant C1</option>\n                                <option>Manager</option>\n                            </select>\n                        </div>\n                        <div class=\"form-group\">\n                            <label>Has Direct Supervisor?</label>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"hasManager\" value=\"true\"  (click)=\"handleRadioChange(true,'hasManager')\"/>Yes</label>\n                            </div>\n                            <div class=\"radio-inline\">\n                                <label><input type=\"radio\" name=\"hasManager\" value=\"false\" checked  (click)=\"handleRadioChange(false,'hasManager')\"/>No</label>\n                            </div>\n                        </div>\n                </div>\n                <div class=\"col-two\">\n                    <div class=\"form-group\">\n                        <label for=\"division\">Division</label>\n                        <select id=\"division\" [ngFormControl]=\"myForm.find('division')\" class=\"form-control\">\n                            <option>Hyla Soft USA</option>\n                            <option>Hyla Soft Italy</option>\n                            <option>Hyla soft Brazil</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                    <label>Manages Others?</label>\n                        <div class=\"radio-inline\">\n                            <label><input type=\"radio\" name=\"canManageEmployees\" value=\"true\" (click)=\"handleRadioChange(true,'canManageEmployees')\"/>Yes</label>\n                        </div>\n                        <div class=\"radio-inline\">\n                            <label><input type=\"radio\" name=\"canManageEmployees\" value=\"false\"   (click)=\"handleRadioChange(false,'canManageEmployees')\" checked/>No</label>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-three\">\n                    <div class=\"form-group\">\n                        <label for=\"department\">Department</label>\n                        <select id=\"department\" [ngFormControl]=\"myForm.find('department')\" class=\"form-control\">\n                            <option>Software</option>\n                            <option>PLM</option>\n                            <option>MES</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label>Manages Projects?</label>\n                        <div class=\"radio-inline\">\n                            <label><input type=\"radio\" name=\"canManageProjects\"  (click)=\"handleRadioChange(true,'canManageProjects')\" value=\"true\"/>Yes</label>\n                        </div>\n                        <div class=\"radio-inline\">\n                            <label><input type=\"radio\" name=\"canManageProjects\" value=\"false\" (click)=\"handleRadioChange(false,'canManageProjects')\" checked/>No</label>\n                        </div>\n                    </div>\n                </div>\n        </div>\n        <div class=\"col-md-12 button-container\">\n            <button class=\"btn btn-primary btn-lg center-block\">Submit</button>\n        </div>\n        </form>\n        \n    ",
            styles: ["\n        .left-form{\n            float:left;\n            width:49%;\n            margin-bottom:25px;\n        }\n        .right-form{\n            float:right;\n            width:49%;\n            margin-bottom:25px;\n        }\n        .col-one{\n            float:left;\n            width:33%;\n        }\n        .col-two{\n            float:left;\n            width:30%;\n            margin-right:2%;\n            margin-left:2%;\n        }\n        .col-three{\n            float:left;\n            width:33%;\n        }\n        .form-container{\n            background-color:#eee;\n            border-top-right-radius: 5px;\n            padding-top:2em;\n        }\n        .btn-lg{\n            width:100%;\n        }\n        .button-container{\n            padding:0;\n            background-color:#eee;\n            border-bottom-left-radius: 5px;\n            border-bottom-right-radius: 5px;\n        }\n    "]
        }), 
        __metadata('design:paramtypes', [common_1.FormBuilder, employee_service_1.EmployeeService, router_1.Router, error_service_1.ErrorService])
    ], NewEmployeeBasic);
    return NewEmployeeBasic;
}());
exports.NewEmployeeBasic = NewEmployeeBasic;

//# sourceMappingURL=data:application/json;base64,
