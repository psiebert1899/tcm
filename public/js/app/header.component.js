"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var router_1 = require("@angular/router");
var router_2 = require("@angular/router");
var user_1 = require("./auth/user");
var authentication_service_1 = require("./auth/authentication.service");
var user_service_1 = require("./user/user.service");
var error_service_1 = require("./errors/error.service");
var clock_component_1 = require("./utility/clock.component");
var HeaderComponent = (function () {
    function HeaderComponent(_fb, _authService, _router, _userService, _errorService) {
        this._fb = _fb;
        this._authService = _authService;
        this._router = _router;
        this._userService = _userService;
        this._errorService = _errorService;
    }
    HeaderComponent.prototype.isLoggedIn = function () {
        return this._authService.isLoggedIn();
    };
    HeaderComponent.prototype.ngOnInit = function () {
        var _this = this;
        if (this._authService.isLoggedIn()) {
            this._userService.getUser().subscribe(function (data) {
                _this.loggedUser = data;
            }, function (error) {
                console.log(error);
            });
        }
        this._userService.broadcastUser.subscribe(function (data) { return _this.loggedUser = data; }, function (error) { return console.log(error); });
        this.myForm = this._fb.group({
            email: ['', common_1.Validators.compose([
                    common_1.Validators.required,
                    this.isEmail
                ])],
            password: ['', common_1.Validators.required]
        });
    };
    HeaderComponent.prototype.onSubmit = function () {
        var _this = this;
        var user = new user_1.User(this.myForm.value.email, this.myForm.value.password);
        this._authService.signin(user).subscribe(function (data) {
            console.log(data);
            localStorage.setItem('token', data.obj);
            localStorage.setItem('userId', data.userId);
            localStorage.setItem('appUser', data.applicationUser._id);
            _this._router.navigateByUrl('/user/profile');
        }, function (error) {
            _this._errorService.handleError(error);
            console.log(error);
        });
    };
    HeaderComponent.prototype.getUserName = function () {
        console.log(this._userService.user);
        return this._userService.user.firstName + " " + this._userService.user.lastName;
    };
    HeaderComponent.prototype.isEmail = function (control) {
        if (!control.value.match("[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?")) {
            return { invalidMail: true };
        }
    };
    HeaderComponent = __decorate([
        core_1.Component({
            selector: 'my-header',
            template: "\n                <nav class=\"navbar navbar-default\">\n                  <div class=\"container-fluid\">\n                    <!-- Brand and toggle get grouped for better mobile display -->\n                    <div class=\"navbar-header\">\n                      <button type=\"button\" class=\"navbar-toggle collapsed\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\" aria-expanded=\"false\">\n                        <span class=\"sr-only\">Toggle navigation</span>\n                        <span class=\"icon-bar\"></span>\n                        <span class=\"icon-bar\"></span>\n                        <span class=\"icon-bar\"></span>\n                      </button>\n                      <a class=\"navbar-brand\" href=\"#\">TCM</a>\n                    </div>\n\n                    <!-- Collect the nav links, forms, and other content for toggling -->\n                    <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\n                      <ul class=\"nav navbar-nav\" *ngIf=\"isLoggedIn()\">\n                        <li class=\"dropdown\">\n                          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Employees<span class=\"caret\"></span></a>\n                          <ul class=\"dropdown-menu\">\n                            <li><a [routerLink]=\"['/employee/new']\">New Employee</a></li>\n                            <li><a [routerLink]=\"['/employee/list']\">Employee List</a></li>\n                            <li><a href=\"#\">Something else here</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">Separated link</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">One more separated link</a></li>\n                          </ul>\n                        </li>\n                         <li class=\"dropdown\" *ngIf=\"isLoggedIn()\">\n                          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Projects<span class=\"caret\"></span></a>\n                          <ul class=\"dropdown-menu\">\n                            <li><a [routerLink]=\"['/project/new']\">New Project</a></li>\n                            <li><a [routerLink]=\"['/project/list']\">Project List</a></li>\n                            <li><a href=\"#\">Something else here</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">Separated link</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">One more separated link</a></li>\n                          </ul>\n                        </li>\n                         <li class=\"dropdown\" *ngIf=\"isLoggedIn()\">\n                          <a href=\"#\" class=\"dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\">Resources<span class=\"caret\"></span></a>\n                          <ul class=\"dropdown-menu\">\n                            <li><a href=\"#\">Action</a></li>\n                            <li><a href=\"#\">Another action</a></li>\n                            <li><a href=\"#\">Something else here</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">Separated link</a></li>\n                            <li role=\"separator\" class=\"divider\"></li>\n                            <li><a href=\"#\">One more separated link</a></li>\n                          </ul>\n                        </li>\n                      </ul>\n                      <ul class=\"nav navbar-nav\" >\n                        <li>\n                          <my-current-time></my-current-time>\n                        </li>\n                      </ul>\n                      <ul class=\"nav navbar-nav navbar-right\">\n                        <li *ngIf=\"isLoggedIn()\"><a [routerLink]=\"['/user/profile']\">{{loggedUser!=undefined?loggedUser.firstName+\" \" + loggedUser.lastName : 'Default User'}}</a></li>\n                        <li *ngIf=\"!isLoggedIn()\">\n                          <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n                            <table>\n                              <tr>\n                                <td>Email<input type=\"email\" id=\"email\" placeholder=\"Email Address\"  [ngFormControl]=\"myForm.find('email')\"/></td>\n                                <td>Password:<input type=\"password\" id=\"password\" placeholder=\"Password\" [ngFormControl]=\"myForm.find('password')\"/></td>\n                                <td><button type=\"submit\" class=\"btn btn-primary\">Sign in</button></td>\n                              </tr>\n                            </table>\n                          </form>\n                        </li>\n\n                        <li><a [routerLink]=\"['auth/logout']\" *ngIf=\"isLoggedIn()\">Sign Out</a></li>\n                      </ul>\n                    </div><!-- /.navbar-collapse -->\n                  </div><!-- /.container-fluid -->\n                </nav>\n    ",
            styles: ["\n                header{\n                    margin-bottom:20px;\n                }\n                ul{\n                    text-align:center;\n                }\n\n\n                li{\n                    float:none;\n                    display:inline-block;\n                }\n                .router-link-active{\n                    background-color: #337ab7;\n                    color: white;\n                }\n                .navbar-brand{\n                    font-family: NEORD;\n                }\n            "],
            directives: [router_2.ROUTER_DIRECTIVES, clock_component_1.ClockComponent]
        }), 
        __metadata('design:paramtypes', [common_1.FormBuilder, authentication_service_1.AuthenticationService, router_1.Router, user_service_1.UserService, error_service_1.ErrorService])
    ], HeaderComponent);
    return HeaderComponent;
}());
exports.HeaderComponent = HeaderComponent;

//# sourceMappingURL=data:application/json;base64,
