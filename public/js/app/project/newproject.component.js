"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var project_service_1 = require("./project.service");
var accordiongroup_component_1 = require("../utility/accordiongroup.component");
var accordion_component_1 = require("../utility/accordion.component");
var project_1 = require("./project");
var employee_service_1 = require("../employee/employee.service");
var query_1 = require("../utility/query");
var NewProjectComponent = (function () {
    function NewProjectComponent(_fb, projectService, _employeeService) {
        this._fb = _fb;
        this.projectService = projectService;
        this._employeeService = _employeeService;
        this.managers = [];
    }
    NewProjectComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.myForm = this._fb.group({
            organization: ['', common_1.Validators.required],
            name: ['', common_1.Validators.required],
            image: ['', common_1.Validators.required],
            manager: ['', common_1.Validators.required]
        });
        this._employeeService.getEmployees(new query_1.Query('canManageProjects', true)).subscribe(function (response) { return _this.managers = response; }, function (error) { return console.log(error); });
    };
    NewProjectComponent.prototype.onSubmit = function () {
        var project = new project_1.Project(this.myForm.value.organization, this.myForm.value.name, this.myForm.value.image, this.myForm.value.manager);
        this.projectService.newProject(project).subscribe(function (data) { return console.log(data); }, function (error) { return console.log(error); });
    };
    NewProjectComponent = __decorate([
        core_1.Component({
            selector: 'my-new-project',
            template: "\n    <form [ngFormModel]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n        <accordion>\n            <accordion-group heading=\"Basic Details\" [isOpen]=\"true\">\n                <div class=\"form-group\">\n                    <label for=\"organization\">Organization</label>\n                    <input type=\"text\" [ngFormControl]=\"myForm.find('organization')\" id=\"organization\" class=\"form-control\"/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"name\">Project Name:</label>\n                    <input type=\"text\" [ngFormControl]=\"myForm.find('name')\" id=\"name\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"Image\">Image</label>\n                    <input type=\"text\" [ngFormControl]=\"myForm.find('image')\" id=\"image\" class=\"form-control\" value=\"/imgs/projectImgs/defaultProjectImage.png\"/>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"Manager\">Manager</label>\n                    <select name=\"Manager\" id=\"manager\" [ngFormControl]=\"myForm.find('manager')\" class=\"form-control\">\n                        <option *ngFor=\"let m of managers\" [value]=\"m._id\">{{m.firstName + \" \"+m.lastName}}</option>\n                    </select>\n                </div>\n            \n            </accordion-group>\n            <accordion-group heading=\"Budget and Scheduling\">\n            \n            </accordion-group>\n            <accordion-group heading=\"Employees\">\n            \n            </accordion-group>\n            <accordion-group heading=\"Documents\">\n            \n            </accordion-group>\n        </accordion>\n        <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n\n    ",
            directives: [accordion_component_1.AccordionComponent, accordiongroup_component_1.AccordionComponentGroup]
        }), 
        __metadata('design:paramtypes', [common_1.FormBuilder, project_service_1.ProjectService, employee_service_1.EmployeeService])
    ], NewProjectComponent);
    return NewProjectComponent;
}());
exports.NewProjectComponent = NewProjectComponent;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2plY3QvbmV3cHJvamVjdC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHFCQUFnQyxlQUFlLENBQUMsQ0FBQTtBQUNoRCx1QkFBb0QsaUJBQWlCLENBQUMsQ0FBQTtBQUN0RSxnQ0FBNkIsbUJBQW1CLENBQUMsQ0FBQTtBQUNqRCx5Q0FBc0MscUNBQXFDLENBQUMsQ0FBQTtBQUM1RSxvQ0FBaUMsZ0NBQWdDLENBQUMsQ0FBQTtBQUNsRSx3QkFBc0IsV0FBVyxDQUFDLENBQUE7QUFDbEMsaUNBQThCLDhCQUE4QixDQUFDLENBQUE7QUFDN0Qsc0JBQW9CLGtCQUFrQixDQUFDLENBQUE7QUEyQ3ZDO0lBR0ksNkJBQW9CLEdBQWUsRUFBUyxjQUE2QixFQUFTLGdCQUFnQztRQUE5RixRQUFHLEdBQUgsR0FBRyxDQUFZO1FBQVMsbUJBQWMsR0FBZCxjQUFjLENBQWU7UUFBUyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWdCO1FBRGxILGFBQVEsR0FBRyxFQUFFLENBQUM7SUFDc0csQ0FBQztJQUNySCxzQ0FBUSxHQUFSO1FBQUEsaUJBV0M7UUFWRyxJQUFJLENBQUMsTUFBTSxHQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDO1lBQ3ZCLFlBQVksRUFBQyxDQUFDLEVBQUUsRUFBQyxtQkFBVSxDQUFDLFFBQVEsQ0FBQztZQUNyQyxJQUFJLEVBQUMsQ0FBQyxFQUFFLEVBQUMsbUJBQVUsQ0FBQyxRQUFRLENBQUM7WUFDN0IsS0FBSyxFQUFDLENBQUMsRUFBRSxFQUFDLG1CQUFVLENBQUMsUUFBUSxDQUFDO1lBQzlCLE9BQU8sRUFBQyxDQUFDLEVBQUUsRUFBQyxtQkFBVSxDQUFDLFFBQVEsQ0FBQztTQUNuQyxDQUFDLENBQUE7UUFDRixJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLElBQUksYUFBSyxDQUFDLG1CQUFtQixFQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUM3RSxVQUFBLFFBQVEsSUFBSSxPQUFBLEtBQUksQ0FBQyxRQUFRLEdBQUMsUUFBUSxFQUF0QixDQUFzQixFQUNsQyxVQUFBLEtBQUssSUFBSSxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEVBQWxCLENBQWtCLENBQzlCLENBQUE7SUFDTCxDQUFDO0lBQ0Qsc0NBQVEsR0FBUjtRQUNJLElBQUksT0FBTyxHQUFFLElBQUksaUJBQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxZQUFZLEVBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNsSSxJQUFJLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQyxTQUFTLENBQzdDLFVBQUEsSUFBSSxJQUFJLE9BQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBakIsQ0FBaUIsRUFDekIsVUFBQSxLQUFLLElBQUksT0FBQSxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFsQixDQUFrQixDQUM5QixDQUFBO0lBQ0wsQ0FBQztJQWhFTDtRQUFDLGdCQUFTLENBQUM7WUFDUCxRQUFRLEVBQUcsZ0JBQWdCO1lBQzNCLFFBQVEsRUFBQyx3MERBcUNSO1lBQ0QsVUFBVSxFQUFDLENBQUMsd0NBQWtCLEVBQUMsa0RBQXVCLENBQUM7U0FDMUQsQ0FBQzs7MkJBQUE7SUF3QkYsMEJBQUM7QUFBRCxDQXZCQSxBQXVCQyxJQUFBO0FBdkJZLDJCQUFtQixzQkF1Qi9CLENBQUEiLCJmaWxlIjoicHJvamVjdC9uZXdwcm9qZWN0LmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50LCBPbkluaXR9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7Q29udHJvbEdyb3VwLCBGb3JtQnVpbGRlciwgVmFsaWRhdG9yc30gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xyXG5pbXBvcnQge1Byb2plY3RTZXJ2aWNlfSBmcm9tIFwiLi9wcm9qZWN0LnNlcnZpY2VcIjtcclxuaW1wb3J0IHtBY2NvcmRpb25Db21wb25lbnRHcm91cH0gZnJvbSBcIi4uL3V0aWxpdHkvYWNjb3JkaW9uZ3JvdXAuY29tcG9uZW50XCI7XHJcbmltcG9ydCB7QWNjb3JkaW9uQ29tcG9uZW50fSBmcm9tIFwiLi4vdXRpbGl0eS9hY2NvcmRpb24uY29tcG9uZW50XCI7XHJcbmltcG9ydCB7UHJvamVjdH0gZnJvbSBcIi4vcHJvamVjdFwiO1xyXG5pbXBvcnQge0VtcGxveWVlU2VydmljZX0gZnJvbSBcIi4uL2VtcGxveWVlL2VtcGxveWVlLnNlcnZpY2VcIjtcclxuaW1wb3J0IHtRdWVyeX0gZnJvbSBcIi4uL3V0aWxpdHkvcXVlcnlcIjtcclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvciA6ICdteS1uZXctcHJvamVjdCcsXHJcbiAgICB0ZW1wbGF0ZTpgXHJcbiAgICA8Zm9ybSBbbmdGb3JtTW9kZWxdPVwibXlGb3JtXCIgKG5nU3VibWl0KT1cIm9uU3VibWl0KClcIj5cclxuICAgICAgICA8YWNjb3JkaW9uPlxyXG4gICAgICAgICAgICA8YWNjb3JkaW9uLWdyb3VwIGhlYWRpbmc9XCJCYXNpYyBEZXRhaWxzXCIgW2lzT3Blbl09XCJ0cnVlXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJvcmdhbml6YXRpb25cIj5Pcmdhbml6YXRpb248L2xhYmVsPlxyXG4gICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIFtuZ0Zvcm1Db250cm9sXT1cIm15Rm9ybS5maW5kKCdvcmdhbml6YXRpb24nKVwiIGlkPVwib3JnYW5pemF0aW9uXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIi8+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cIm5hbWVcIj5Qcm9qZWN0IE5hbWU6PC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT1cInRleHRcIiBbbmdGb3JtQ29udHJvbF09XCJteUZvcm0uZmluZCgnbmFtZScpXCIgaWQ9XCJuYW1lXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwiSW1hZ2VcIj5JbWFnZTwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9XCJ0ZXh0XCIgW25nRm9ybUNvbnRyb2xdPVwibXlGb3JtLmZpbmQoJ2ltYWdlJylcIiBpZD1cImltYWdlXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiB2YWx1ZT1cIi9pbWdzL3Byb2plY3RJbWdzL2RlZmF1bHRQcm9qZWN0SW1hZ2UucG5nXCIvPlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJNYW5hZ2VyXCI+TWFuYWdlcjwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPHNlbGVjdCBuYW1lPVwiTWFuYWdlclwiIGlkPVwibWFuYWdlclwiIFtuZ0Zvcm1Db250cm9sXT1cIm15Rm9ybS5maW5kKCdtYW5hZ2VyJylcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8b3B0aW9uICpuZ0Zvcj1cImxldCBtIG9mIG1hbmFnZXJzXCIgW3ZhbHVlXT1cIm0uX2lkXCI+e3ttLmZpcnN0TmFtZSArIFwiIFwiK20ubGFzdE5hbWV9fTwvb3B0aW9uPlxyXG4gICAgICAgICAgICAgICAgICAgIDwvc2VsZWN0PlxyXG4gICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8L2FjY29yZGlvbi1ncm91cD5cclxuICAgICAgICAgICAgPGFjY29yZGlvbi1ncm91cCBoZWFkaW5nPVwiQnVkZ2V0IGFuZCBTY2hlZHVsaW5nXCI+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8L2FjY29yZGlvbi1ncm91cD5cclxuICAgICAgICAgICAgPGFjY29yZGlvbi1ncm91cCBoZWFkaW5nPVwiRW1wbG95ZWVzXCI+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8L2FjY29yZGlvbi1ncm91cD5cclxuICAgICAgICAgICAgPGFjY29yZGlvbi1ncm91cCBoZWFkaW5nPVwiRG9jdW1lbnRzXCI+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8L2FjY29yZGlvbi1ncm91cD5cclxuICAgICAgICA8L2FjY29yZGlvbj5cclxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzcz1cImJ0biBidG4tcHJpbWFyeVwiPlN1Ym1pdDwvYnV0dG9uPlxyXG4gICAgPC9mb3JtPlxyXG5cclxuICAgIGAsXHJcbiAgICBkaXJlY3RpdmVzOltBY2NvcmRpb25Db21wb25lbnQsQWNjb3JkaW9uQ29tcG9uZW50R3JvdXBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZXdQcm9qZWN0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0e1xyXG4gICAgbXlGb3JtOkNvbnRyb2xHcm91cDtcclxuICAgIG1hbmFnZXJzID0gW107XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9mYjpGb3JtQnVpbGRlcixwcml2YXRlIHByb2plY3RTZXJ2aWNlOlByb2plY3RTZXJ2aWNlLHByaXZhdGUgX2VtcGxveWVlU2VydmljZTpFbXBsb3llZVNlcnZpY2Upe31cclxuICAgIG5nT25Jbml0KCl7XHJcbiAgICAgICAgdGhpcy5teUZvcm09dGhpcy5fZmIuZ3JvdXAoe1xyXG4gICAgICAgICAgICBvcmdhbml6YXRpb246WycnLFZhbGlkYXRvcnMucmVxdWlyZWRdLFxyXG4gICAgICAgICAgICBuYW1lOlsnJyxWYWxpZGF0b3JzLnJlcXVpcmVkXSxcclxuICAgICAgICAgICAgaW1hZ2U6WycnLFZhbGlkYXRvcnMucmVxdWlyZWRdLFxyXG4gICAgICAgICAgICBtYW5hZ2VyOlsnJyxWYWxpZGF0b3JzLnJlcXVpcmVkXVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5fZW1wbG95ZWVTZXJ2aWNlLmdldEVtcGxveWVlcyhuZXcgUXVlcnkoJ2Nhbk1hbmFnZVByb2plY3RzJyx0cnVlKSkuc3Vic2NyaWJlKFxyXG4gICAgICAgICAgICByZXNwb25zZSA9PiB0aGlzLm1hbmFnZXJzPXJlc3BvbnNlLFxyXG4gICAgICAgICAgICBlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcilcclxuICAgICAgICApXHJcbiAgICB9XHJcbiAgICBvblN1Ym1pdCgpe1xyXG4gICAgICAgIHZhciBwcm9qZWN0PSBuZXcgUHJvamVjdCh0aGlzLm15Rm9ybS52YWx1ZS5vcmdhbml6YXRpb24sdGhpcy5teUZvcm0udmFsdWUubmFtZSx0aGlzLm15Rm9ybS52YWx1ZS5pbWFnZSx0aGlzLm15Rm9ybS52YWx1ZS5tYW5hZ2VyKTtcclxuICAgICAgICB0aGlzLnByb2plY3RTZXJ2aWNlLm5ld1Byb2plY3QocHJvamVjdCkuc3Vic2NyaWJlKFxyXG4gICAgICAgICAgICBkYXRhID0+IGNvbnNvbGUubG9nKGRhdGEpLFxyXG4gICAgICAgICAgICBlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcilcclxuICAgICAgICApXHJcbiAgICB9XHJcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
